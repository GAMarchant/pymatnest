# starting volume, in A^3
max_volume_per_atom=2000.0

# 64 atoms total, 32 of each type
# masses will default to 1.0, which is efficient and correct
start_species=1 32, 2 32

# prevent atoms completely on top of each other
start_energy_ceiling_per_atom=1.5

n_walkers=9216
n_cull=1

# total number of iters will be 1500/(1/9216) = 1500*9216
n_iter_times_fraction_killed=1500
# could also stop iteration when convergence is assured for T > some cutoff
# converge_down_to_T=200
# or could stop convergence once energy is low enough
# min_Emax=-61.0

out_file_prefix=test.periodic_binary.MD.FORTRAN_LJ

################################################################################

atom_algorithm=MD

n_model_calls_expected=576

n_atom_steps=1
atom_traj_len=8
n_cell_volume_steps=32
n_cell_shear_steps=8
n_cell_stretch_steps=8
n_swap_steps=8
n_semi_grand_steps=8
semi_grand_potentials={ 1 : 0.0, 2 : 0.1 }

################################################################################
# pressure in units of the potential (eV/A^3), this is 0.1 GPa
MC_cell_P=6.25e-4

# default MD time steps and adjustment rates should be correct

# default cell steps should be correct

MC_cell_min_aspect_ratio=0.85
################################################################################

# binary LJ from hardcoded FORTRAN
FORTRAN_model=example_LJ_model.so
energy_calculator=fortran

# LAMMPS is another possibility
# energy_calculator=lammps
# name of the LAMMPS machine (i.e. the part of the library file that follows 'liblammps_', without the '.so' suffix)
# LAMMPS_name=mpi
# # potential parameters
# LAMMPS_init_cmds=pair_style lj/cut 9.00; pair_coeff 1 1 0.1 3.0; pair_coeff 1 2 0.2 3.0; pair_coeff 2 2 0.1 3.0; pair_modify shift yes
# conversion from atomic numbers (set in start_species) to types for LAMMPS
# LAMMPS_atom_types=H 1,He 2

rng=numpy

debug=0
