diff --git a/ase/atoms.py b/ase/atoms.py
index 53c905e..36e0ca8 100644
--- a/ase/atoms.py
+++ b/ase/atoms.py
@@ -16,6 +16,7 @@ import numpy as np
 
 import ase.units as units
 from ase.atom import Atom
+from ase.data import generalized_chemical_symbols
 from ase.constraints import FixConstraint, FixBondLengths
 from ase.data import atomic_numbers, chemical_symbols, atomic_masses
 from ase.utils import basestring, formula_hill, formula_metal
@@ -462,7 +463,7 @@ class Atoms(object):
 
     def get_chemical_symbols(self):
         """Get list of chemical symbol strings."""
-        return [chemical_symbols[Z] for Z in self.arrays['numbers']]
+        return [generalized_chemical_symbols(Z) for Z in self.arrays['numbers']]
 
     def set_chemical_symbols(self, symbols):
         """Set chemical symbols."""
@@ -499,7 +500,7 @@ class Atoms(object):
             n = len(numbers)
             changes = np.concatenate(([0], np.arange(1, n)[numbers[1:] !=
                                                            numbers[:-1]]))
-            symbols = [chemical_symbols[e] for e in numbers[changes]]
+            symbols = [generalized_chemical_symbols(e) for e in numbers[changes]]
             counts = np.append(changes[1:], n) - changes
 
             formula = ''
@@ -511,7 +512,7 @@ class Atoms(object):
             formula = formula_hill(self.get_atomic_numbers())
         elif mode == 'all':
             numbers = self.get_atomic_numbers()
-            symbols = [chemical_symbols[n] for n in numbers]
+            symbols = [generalized_chemical_symbols(n) for n in numbers]
 
             formula = ''
             for s in symbols:
@@ -1897,7 +1898,10 @@ def symbols2numbers(symbols):
     numbers = []
     for s in symbols:
         if isinstance(s, basestring):
-            numbers.append(atomic_numbers[s])
+            try:
+                numbers.append(atomic_numbers[s])
+            except:
+                numbers.append(int(s.replace('t_','')))
         else:
             numbers.append(s)
     return numbers
diff --git a/ase/data/__init__.py b/ase/data/__init__.py
index 5858372..e0e3589 100644
--- a/ase/data/__init__.py
+++ b/ase/data/__init__.py
@@ -33,6 +33,12 @@ chemical_symbols = [
     'Rf', 'Db', 'Sg', 'Bh', 'Hs', 'Mt', 'Ds', 'Rg', 'Cn', 'Nh', 'Fl', 'Mc',
     'Lv', 'Ts', 'Og']
 
+def generalized_chemical_symbols(Z):
+    try:
+        return chemical_symbols[Z]
+    except:
+        return ('t_%d' % Z)
+
 atomic_numbers = {}
 for Z, symbol in enumerate(chemical_symbols):
     atomic_numbers[symbol] = Z
